@import "../palette.scss";

$scrollbar-width: 14px;
$scrollbar-color-1: transparentize($mauve, 0.5);
$scrollbar-color-2: $mantle;

.content {
  width: 100%;
  flex-grow: 1;
  position: relative;
  overflow-y: auto;
  
  /* Firefox */
  scrollbar-width: $scrollbar-width;
  scrollbar-color: $scrollbar-color-1 $scrollbar-color-2;

  /* Chrome, Edge, and Safari */
  &::-webkit-scrollbar {
    width: $scrollbar-width;
  }

  &::-webkit-scrollbar-track {
    background: $scrollbar-color-2;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $scrollbar-color-1;
    border-radius: 10px;
    border: 4px solid $scrollbar-color-2;
  }
}

.files {
  display: grid;
  grid-template-columns: auto 1fr auto auto auto;

  /* Firefox */
  scrollbar-width: $scrollbar-width;
  scrollbar-color: $scrollbar-color-1 $scrollbar-color-2;

  /* Chrome, Edge, and Safari */
  &::-webkit-scrollbar {
    width: $scrollbar-width;
  }

  &::-webkit-scrollbar-track {
    background: $scrollbar-color-2;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $scrollbar-color-1;
    border-radius: 10px;
    border: 4px solid $scrollbar-color-2;
  }
}

@function blend($color1, $color2, $opacity) {
  $r1: red($color1);
  $g1: green($color1);
  $b1: blue($color1);

  $r2: red($color2);
  $g2: green($color2);
  $b2: blue($color2);

  $r: $r1 * (1 - $opacity) + $r2 * $opacity;
  $g: $g1 * (1 - $opacity) + $g2 * $opacity;
  $b: $b1 * (1 - $opacity) + $b2 * $opacity;

  @return rgb($r, $g, $b);
}

.file {
  display: contents;
  cursor: pointer;

  & > div {
    padding: 1rem 0.5rem;
    font-size: 1rem;
    color: $subtext0;
    height: fit-content;
    transition: all 0.15s cubic-bezier(0, 1, 1, 0.95);
  }

  .date {
    padding-right: 0;
  }

  & > div:last-child {
    padding-right: 1rem;
  }

  &:nth-child(odd) > div {
    background-color: $base;

    .encrypted {
      background-color: $base;
    }
  }

  &:nth-child(even) > div {
    background-color: $mantle;
  
    .encrypted {
      background-color: $mantle;
    }
  }

  &:hover > div {
    background-color: transparentize($mauve, 0.85);

    .encrypted {
      background-color: blend($base, $mauve, 0.15);
    }
  }

  &:nth-child(odd).selected > div {
    background-color: mix($base, $mauve, 30%);
    color: $base;

    svg {
      color: $base;
    }

    .encrypted {
      background-color: mix($base, $mauve, 30%);
    }
  }

  &:nth-child(even).selected > div {
    background-color: mix($mantle, $mauve, 20%);
    color: $mantle;

    svg {
      color: $mantle;
    }

    .encrypted {
      background-color: mix($mantle, $mauve, 20%);
    }
  }
}

.icon {
  padding: 0 0.5rem !important;
  height: 100% !important;
  position: relative;

  svg:not(.encrypted) {
    font-size: 2rem;
    height: 100%;
  }

  .encrypted {
    position: absolute;
    bottom: 6px;
    right: 6px;
    font-size: 1.1rem;
    color: $text;
    padding: 3px 0 0 2px;
    border-radius: 3px 0 0 0;
    width: fit-content;
    transition: background-color 0.15s cubic-bezier(0, 1, 1, 0.95);
  }
}

.name {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.size {
  text-align: right;
}

.fallback {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 20px;
  color: $subtext1;
  height: 100%;

  h1 {
    font-size: 40px;
    margin: 0;
  }

  p {
    font-size: 20px;
    font-weight: bolder;
    margin: 0 0 40px 0;
  }
}

.overlay {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 800;
  transition: background-color 0.2s;

  &.hovering {
    background-color: transparentize($mauve, 0.9);
  }
}